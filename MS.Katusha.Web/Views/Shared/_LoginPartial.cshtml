@using MS.Katusha.Domain.Entities
@using MS.Katusha.Domain.Raven.Entities
<span id="fbResult" style="color:#800000">FB</span>
@if (Request.IsAuthenticated) {
    var profile = ViewBag.KatushaProfile as Profile;
    var conversationCount = ViewBag.ConversationCount as ConversationCountResult;
    var newVisits = ViewBag.NewVisits as NewVisits;
    var name = (profile != null) ? profile.Name : User.Identity.Name;
    <div><table><tr>
    @if (newVisits != null && newVisits.Visits != null && newVisits.Visits.Count > 0) {
        <td>
            <a href="@Url.Action("NewVisits", "Visitor", new { key = Html.GetUrlFriendlyDateTime(newVisits.LastVisitTime) })" title="@String.Format("{0} visitors.", newVisits.Visits.Count)">
                <img src="/Images/view.gif" /><br/>
                <b>@newVisits.Visits.Count </b> visitors
            </a>
        </td>
    }

    @if (conversationCount != null && conversationCount.UnreadCount > 0) {
        <td>
            <a href="@Url.Action("Conversations", "Messages", new { key = 1 })" title="@String.Format("{0}/{1}", conversationCount.UnreadCount, conversationCount.Count)">
                <img src="/Images/mail.jpg" /><br/>
                <b>@conversationCount.UnreadCount</b> / @conversationCount.Count
            </a>
        </td>
    }
    </tr></table></div>
    <p>
        Hello, @Html.ActionLink(name, "ChangePassword", "Account", routeValues: null, htmlAttributes: new { @class = "username", title = "Change password" })!
        @Html.ActionLink("Log off", "LogOff", "Account")
    </p>
} else {
    @*
    https://developers.facebook.com/apps/405781396117619/auth
    http://csharpsdk.org/docs/web/getting-started
    *@
    <script>

        window.fbAsyncInit = function () {
            FB.init({
                appId: '405781396117619', // App ID
                status: true, // check login status
                cookie: true, // enable cookies to allow the server to access the session
                xfbml: true  // parse XFBML
            });
            
            FB.getLoginStatus(function (response) {
                if (response.status === 'connected') {
                    var uid = response.authResponse.userID;
                    var accessToken = response.authResponse.accessToken;
                    @if (Session["AccessToken"] == null) {
                        <text>$.post('/Account/FacebookLogin', { 'accessToken': accessToken, uid : uid}, function(data, textStatus) { document.getElementById("fbResult").innerHTML = (textStatus);});</text>
                    }
                } else if (response.status === 'not_authorized') {
                    // the user is logged in to Facebook, 
                    // but has not authenticated your app
                } else {
                    // the user isn't logged in to Facebook.
                }
            });
        };

        // Load the SDK Asynchronously
        (function (d) {
            var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement('script'); js.id = id; js.async = true;
            js.src = "//connect.facebook.net/en_US/all.js";
            ref.parentNode.insertBefore(js, ref);
        } (document));
    </script>
    
    <ul>
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", data_dialog_title = "Registration" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", data_dialog_title = "Identification" })</li>
        <li><div class="fb-login-button" data-show-faces="true" data-width="400" data-max-rows="1"></div></li>
    </ul>
}