@using MS.Katusha.Enumerations
@model ProfileModel
@{ 
    var action = ViewContext.RouteData.Values["Action"].ToString();
    var edit = action.ToLowerInvariant() == "edit";
   }

<fieldset>
    <legend>Profile Form</legend>
    <ol>
        <li>
            <div class="editor-label mandatory">
                @Html.LabelFor(model => model.Name)
            </div>
        </li>
        <li>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                <br />(Cannot be empty, this will be visible to other users and it can be anything)
                <br />@Html.ValidationMessageFor(model => model.Name)<br />
            </div>
        </li>
        @*
        <li>
            <div style="display: none">
                <div class="editor-label">
                    @Html.LabelFor(model => model.FriendlyName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FriendlyName)
                    @Html.ValidationMessageFor(model => model.FriendlyName)
                </div>
            </div>
        </li>
        *@
        

        <li>
            <div class="editor-label mandatory">
                @Html.LabelFor(model => model.Location.CountryName)
            </div>
            <div class="editor-field">
                @CountryCity.EditOrCreate(Model.Location, "Country", "City", "/Search/GetCities")
                <br />(Country cannot be empty)
                <br />@Html.ValidationMessageFor(model => model.Location.CountryName)<br />
            </div>
        </li>
        <li>
            <div class="editor-label mandatory">
                @Html.LabelFor(model => model.Height)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Height)
                <br />(Cannot be empty must be in centimeters, must be some number between <b>100</b> and <b>250</b>)
                <br />@Html.ValidationMessageFor(model => model.Height)
            </div><br />
        </li>
        <li>
            <div class="editor-label mandatory">
                @Html.LabelFor(model => model.BirthYear)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.BirthYear)
                <br />(Cannot be empty, must be some number between <b>1940</b> and <b>2000</b>)
                <br />@Html.ValidationMessageFor(model => model.BirthYear)
            </div><br />
        </li>
        <li>
            <div class="editor-label mandatory">
                @Html.LabelFor(model => model.Description)
                (Cannot be empty. Please tell other people a little bit about yourself. It doesn't have to long or poetic. But it would be nice for them to know more about you.)
                <br />@Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description, new {cols=40, rows=10, style="width:420px;"})
            </div><br />
        </li>
        <div style="@(edit ? "" : "display:none")">
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.HairColor)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.HairColor)
                    <br />@Html.ValidationMessageFor(model => model.HairColor)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Religion)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.Religion)
                    <br />@Html.ValidationMessageFor(model => model.Religion)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Smokes)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.Smokes)
                    <br />@Html.ValidationMessageFor(model => model.Smokes)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.EyeColor)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.EyeColor)
                    <br />@Html.ValidationMessageFor(model => model.EyeColor)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.BodyBuild)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.BodyBuild)
                    <br />@Html.ValidationMessageFor(model => model.BodyBuild)
                </div>
            </li>
            <li>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Alcohol)
                </div>
                <div class="editor-field">
                    @Html.EnumDropDownListFor(model => model.Alcohol)
                    <br />@Html.ValidationMessageFor(model => model.Alcohol)
                </div>
            </li>
            @*
            @if (Model.Gender == Sex.Male) {
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DickSize)
                    </div>
                    <div class="editor-field">
                        @Html.EnumDropDownListFor(model => model.DickSize, true)
                        <br />@Html.ValidationMessageFor(model => model.DickSize)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DickThickness)
                    </div>
                    <div class="editor-field">
                        @Html.EnumDropDownListFor(model => model.DickThickness)
                        <br />@Html.ValidationMessageFor(model => model.DickThickness)
                    </div>
                </li>
            } else if (Model.Gender == Sex.Female) {
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.BreastSize)
                    </div>
                    <div class="editor-field">
                        @Html.EnumDropDownListFor(model => model.BreastSize)
                        <br />@Html.ValidationMessageFor(model => model.BreastSize)
                    </div>   
                </li>
            }
            *@

            <li>
                @Html.FacebookListFor2("Profile.CountriesToVisit", Model.CountriesToVisit, "Country", p => p.CountriesToVisit, p => p.Country)
            </li>
            <li>
                @Html.FacebookListFor2("Profile.LanguagesSpoken", Model.LanguagesSpoken, "Language", p => p.LanguagesSpoken, p => p.Language)
            </li>
            <li>
                @Html.FacebookListFor("Profile.Searches", Model.Searches, typeof(LookingFor), p => p.Searches, p => p.Search)
            </li>
        </div>
    </ol>
</fieldset>
@*@if(edit) {
    @Html.HideLink("Hide Profile", "Hide", "Profiles", "Your profile will be hidden from searches and any other general lists.<br />But you cannot search anyone and see online users as well.")
    @Html.AreYouSureActionLink("Delete Profile", "Remove", "Profiles");
}*@
