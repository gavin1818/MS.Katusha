<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="clientDependency" type="ClientDependency.Core.Config.ClientDependencySection, ClientDependency.Core" requirePermission="false" />
    <section name="resizer" type="ImageResizer.ResizerSection" />
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="glimpse" type="Glimpse.Core.Configuration.GlimpseConfiguration" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <sectionGroup name="telerik">
      <section name="webAssets" type="Telerik.Web.Mvc.Configuration.WebAssetConfigurationSection, Telerik.Web.Mvc" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.NLog.NLogLoggerFactoryAdapter, Common.Logging.NLog">
        <arg key="configType" value="FILE" />
        <arg key="configFile" value="~/NLog.config" />
      </factoryAdapter>
    </logging>
  </common>
  <connectionStrings>
    <add name="MS.Katusha.Domain.KatushaDbContext" connectionString="Data Source=localhost;Initial Catalog=MS.Katusha.Domain.DbContext;Integrated Security=True" providerName="System.Data.SqlClient" />
    <add name="_MS.Katusha.Domain.KatushaDbContext" connectionString="Server=ubuntu.katusha.com;port=3306;Uid=root;Pwd=S506t819;Database=MSKatushaDomainDbContext;" providerName="MySql.Data.MySqlClient" />
    <add name="RavenDB" connectionString="Url=http://localhost:8080/" />
  </connectionStrings>
  <appSettings>
    <!-- overridden by AppHarbor -->
    
    <add key="VirtualPath" value="http://localhost:10595/" />
    <add key="Photos_Folder" value="~/Photos/" />
    
    <!-- /overridden by AppHarbor -->

    <!-- CacheProvider can be [Empty/Null/None] = No Cache, [Redis] (For Redis Caching mode REDISTOGO_URL must be set), [RavenDB] or [Memory] -->
    <add key="CacheProvider" value="Memory" />
    <add key="REDISTOGO_URL" value="ubuntu.katusha.com:6379" />
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="true" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="Glimpse.RavenDb.DocumentStoreApplicationKey" value="MyDocStore" />
    <add key="Glimpse.RavenDb.HiddenFields" value="PasswordHash,PasswordSalt" />
    <add key="LOGENTRIES_ACCOUNT_KEY" value="" />
    <add key="LOGENTRIES_LOCATION" value="" />
    <add key="log4net.Internal.Debug" value="true" />
  </appSettings>
  <system.web>
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    <pages validateRequest="false">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
        <add namespace="MS.Katusha.Domain.Entities" />
        <add namespace="MS.Katusha.Domain.Raven.Entities" />
        <add namespace="MS.Katusha.Web" />
        <add namespace="Telerik.Web.Mvc.UI" />
      </namespaces>
    </pages>
    <profile defaultProvider="DefaultProfileProvider">
      <providers>
        <add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="MS.Katusha.Domain.KatushaDbContext" applicationName="/" />
      </providers>
    </profile>
    <membership defaultProvider="DefaultMembershipProvider">
      <providers>
        <add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="MS.Katusha.Domain.KatushaDbContext" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <roleManager defaultProvider="DefaultRoleProvider">
      <providers>
        <add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="MS.Katusha.Domain.KatushaDbContext" applicationName="/" />
      </providers>
    </roleManager>
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="MS.Katusha.Domain.KatushaDbContext" applicationName="/" />
      </providers>
    </sessionState>
    <httpModules>
      <!-- ** Need to add the dependency module -->
      <add name="ClientDependencyModule" type="ClientDependency.Core.Module.ClientDependencyModule, ClientDependency.Core" />
      <add name="ImageResizingModule" type="ImageResizer.InterceptModule" />
      <add name="Glimpse" type="Glimpse.Core.Module" />
    </httpModules>
    <httpHandlers>
      <!-- ** Need to add the dependency handler -->
      <add verb="*" path="DependencyHandler.axd" type="ClientDependency.Core.CompositeFiles.CompositeDependencyHandler, ClientDependency.Core " />
      <add path="glimpse.axd" verb="GET,POST" type="Glimpse.Core.Handler" />
      <add verb="GET,HEAD" path="asset.axd" validate="false" type="Telerik.Web.Mvc.WebAssetHttpHandler, Telerik.Web.Mvc" />
    </httpHandlers>
    <trace writeToDiagnosticsTrace="true" enabled="true" pageOutput="false" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ClientDependencyModule" />
      <add name="ClientDependencyModule" type="ClientDependency.Core.Module.ClientDependencyModule, ClientDependency.Core" />
      <add name="ImageResizingModule" type="ImageResizer.InterceptModule" />
      <add name="Glimpse" type="Glimpse.Core.Module,Glimpse.Core" preCondition="integratedMode" />
    </modules>
    <handlers>
      <!-- ** Need to add the dependency handler -->
      <remove name="DependencyHandler" />
      <add name="DependencyHandler" preCondition="integratedMode" verb="*" path="DependencyHandler.axd" type="ClientDependency.Core.CompositeFiles.CompositeDependencyHandler, ClientDependency.Core " />
      <add name="Glimpse" path="glimpse.axd" verb="GET,POST" type="Glimpse.Core.Handler,Glimpse.Core" preCondition="integratedMode" />
      <remove name="asset" />
      <add name="asset" preCondition="integratedMode" verb="GET,HEAD" path="asset.axd" type="Telerik.Web.Mvc.WebAssetHttpHandler, Telerik.Web.Mvc" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.0.0.0" newVersion="1.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Data.SqlServerCe" publicKeyToken="89845dcd8080cc91" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.1" newVersion="4.0.0.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlCeConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="System.Data.SqlServerCe.4.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <system.net>
    <mailSettings>
      <!-- Method#1: Configure smtp server credentials -->
      <!--
      <smtp from="mertsakarya@gmail.com">
        <network enableSsl="true" host="smtp.gmail.com" port="587" userName="mertsakarya@gmail.com" password="SSS" />
      </smtp>
      -->
      <!-- Method#2: Dump emails to a local directory -->
      <smtp from="mertsakarya@gmail.com" deliveryMethod="SpecifiedPickupDirectory">
        <network host="localhost" />
        <specifiedPickupDirectory pickupDirectoryLocation="P:\Mail\" />
      </smtp>
    </mailSettings>
  </system.net>
  <clientDependency version="1">
    <!-- This section is used for Web Forms only, the enableCompositeFiles="true" is optional and by default is set to true -->
    <fileRegistration defaultProvider="LoaderControlProvider">
      <providers>
        <add name="PageHeaderProvider" type="ClientDependency.Core.FileRegistration.Providers.PageHeaderProvider, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LazyLoadProvider" type="ClientDependency.Core.FileRegistration.Providers.LazyLoadProvider, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LoaderControlProvider" type="ClientDependency.Core.FileRegistration.Providers.LoaderControlProvider, ClientDependency.Core" enableCompositeFiles="true" />
      </providers>
    </fileRegistration>
    <!-- This section is used for MVC only -->
    <mvc defaultRenderer="StandardRenderer">
      <renderers>
        <add name="StandardRenderer" type="ClientDependency.Core.FileRegistration.Providers.StandardRenderer, ClientDependency.Core" enableCompositeFiles="true" />
        <add name="LazyLoadRenderer" type="ClientDependency.Core.FileRegistration.Providers.LazyLoadRenderer, ClientDependency.Core" enableCompositeFiles="true" />
      </renderers>
    </mvc>
    <!--
  The composite file section configures the compression/combination/minification of files.
  You can enable/disable minification of either JS/CSS files and you can enable/disable the 
  persistence of composite files. By default, minification and persistence is enabled. Persisting files
  means that the system is going to save the output of the compressed/combined/minified files
  to disk so that on any subsequent request (when output cache expires) that these files don't have
  to be recreated again and will be based on the persisted file on disk. This saves on processing time.
  -->
    <compositeFiles defaultFileProcessingProvider="CompositeFileProcessor" compositeFileHandlerPath="~/DependencyHandler.axd">
      <fileProcessingProviders>
        <add name="CompositeFileProcessor" type="ClientDependency.Core.CompositeFiles.Providers.CompositeFileProcessingProvider, ClientDependency.Core" enableCssMinify="true" enableJsMinify="true" persistFiles="true" compositeFilePath="~/App_Data/ClientDependency" />
      </fileProcessingProviders>
      <!-- 
      A file map provider stores references to dependency files by an id to be used in the handler URL when using the MappedId Url type
      -->
      <fileMapProviders>
        <add name="XmlFileMap" type="ClientDependency.Core.CompositeFiles.Providers.XmlFileMapper, ClientDependency.Core" mapPath="~/App_Data/ClientDependency" />
      </fileMapProviders>
      <!-- 
    Defines the mime types to compress when requested by the client.
    Path is a regex selector, or a * can be used as in place of 'any'.
    Generally mime types are only set by client browsers in the request for things
    such as JSON or XML ajax requests.
    
      <mimeTypeCompression>
        <add type="application/json" path="^.*?/Services/.*"/>
      </mimeTypeCompression>
	  -->
      <!-- 
    Defines the paths to match on to enable rogue file compression.
    Path is a regex selector, or a * can be used as in place of 'any'.
    jsExt and cssExt are comma seperated list of extensions to match to have the dependencies
    replaced with the composite file handler. You can even include ASP.Net web service JS proxies.
    
      <rogueFileCompression>
        <add path="*" compressJs="true" compressCss="true" jsExt=".js,asmx/js" cssExt=".css">
          <exclusions>
            <add path="^.*test.aspx.*" />
          </exclusions>
        </add>
      </rogueFileCompression>
	-->
    </compositeFiles>
  </clientDependency>
  <system.web.extensions>
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="500000000" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0" />
      <add name="Microsoft SQL Server Compact Data Provider 4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    </DbProviderFactories>
  </system.data>
  <resizer>
    <plugins>
      <add name="MvcRoutingShim" />
    </plugins>
  </resizer>
  <glimpse enabled="true" ipForwardingEnabled="true">
    <ipAddresses>
      <add address="127.0.0.1" />
      <add address="195.33.232.233" />
      <add address="217.131.25.222" />
      <add address="::1" />
    </ipAddresses>
  </glimpse>
  <nlog>
    <extensions>
      <add assembly="le_nlog" />
    </extensions>
    <targets>
      <target name="logentries" type="Logentries" debug="true" ssl="false" layout="${date:format=ddd MMM dd} ${time:format=HH:mm:ss} ${date:format=zzz yyyy} ${logger} : ${LEVEL}, ${message}" />
    </targets>
    <rules>
      <logger name="*" minLevel="Debug" appendTo="logentries" />
    </rules>
  </nlog>
  <log4net>
    <appender name="LeAppender" type="log4net.Appender.LeAppender, LeLog4net">
      <Debug value="true" />
      <Ssl value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d{ddd MMM dd HH:mm:ss zzz yyyy} %logger %: %level%, %m" />
      </layout>
    </appender>
    <root>
      <level value="ALL" />
      <appender-ref ref="LeAppender" />
    </root>
  </log4net>
  <telerik>
    <webAssets useTelerikContentDeliveryNetwork="false" />
  </telerik>
</configuration>