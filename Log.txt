2012-04-07 02:52:14.2384|INFO|Raven.Database.Impl.DocumentCacher|MemoryCache Settings:
  PhysicalMemoryLimit = 99
  CacheMemoryLimit    = 3165650944
  PollingInterval     = 00:02:00
2012-04-07 02:52:14.2624|INFO|Raven.Storage.Esent.TransactionalStorage|Esent Settings:
  MaxVerPages      = 32768
  CacheSizeMax     = 65536
  DatabasePageSize = 4096
2012-04-07 02:52:15.4674|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index ProfileCountryFacetIndex:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileCountryFacetIndex : AbstractViewGenerator
{
	public Index_ProfileCountryFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.CountriesToVisit, (p, c) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Country = c.Country})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.CountriesToVisit)), (Func<dynamic, dynamic, dynamic>)((p, c) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Country = c.Country, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Country");
		this.AddField("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileCountryFacetIndex : AbstractViewGenerator
{
	public Index_ProfileCountryFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.CountriesToVisit, (p, c) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Country = c.Country})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.CountriesToVisit)), (Func<dynamic, dynamic, dynamic>)((p, c) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Country = c.Country, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Country");
		this.AddField("__document_id");
	}
}

2012-04-07 02:52:15.6354|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index ProfileFacetsIndex:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileFacetsIndex : AbstractViewGenerator
{
	public Index_ProfileFacetsIndex()
	{
		this.ViewText = @"docs.Profiles
	.Select(p => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").Select((Func<dynamic, dynamic>)(p => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileFacetsIndex : AbstractViewGenerator
{
	public Index_ProfileFacetsIndex()
	{
		this.ViewText = @"docs.Profiles
	.Select(p => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").Select((Func<dynamic, dynamic>)(p => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("__document_id");
	}
}

2012-04-07 02:52:15.8105|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index ProfileLanguageFacetIndex:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileLanguageFacetIndex : AbstractViewGenerator
{
	public Index_ProfileLanguageFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.LanguagesSpoken, (p, l) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Language = l.Language})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.LanguagesSpoken)), (Func<dynamic, dynamic, dynamic>)((p, l) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Language = l.Language, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Language");
		this.AddField("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileLanguageFacetIndex : AbstractViewGenerator
{
	public Index_ProfileLanguageFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.LanguagesSpoken, (p, l) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Language = l.Language})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.LanguagesSpoken)), (Func<dynamic, dynamic, dynamic>)((p, l) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Language = l.Language, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Language");
		this.AddField("__document_id");
	}
}

2012-04-07 02:52:15.9865|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index ProfileSearchFacetIndex:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileSearchFacetIndex : AbstractViewGenerator
{
	public Index_ProfileSearchFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.Searches, (p, s) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Search = s.Search})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.Searches)), (Func<dynamic, dynamic, dynamic>)((p, s) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Search = s.Search, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Search");
		this.AddField("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_ProfileSearchFacetIndex : AbstractViewGenerator
{
	public Index_ProfileSearchFacetIndex()
	{
		this.ViewText = @"docs.Profiles
	.SelectMany(p => p.Searches, (p, s) => new {From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Search = s.Search})
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Profiles").SelectMany((Func<dynamic, IEnumerable<dynamic>>)(p => (IEnumerable<dynamic>)(p.Searches)), (Func<dynamic, dynamic, dynamic>)((p, s) => new { From = p.From, City = p.City, Gender = p.Gender, BodyBuild = p.BodyBuild, HairColor = p.HairColor, EyeColor = p.EyeColor, Smokes = p.Smokes, Alcohol = p.Alcohol, Religion = p.Religion, DickSize = p.DickSize, 
		DickThickness = p.DickThickness, BreastSize = p.BreastSize, BirthYear = p.BirthYear, Height = p.Height, Search = s.Search, __document_id = p.__document_id })));
		this.AddField("From");
		this.AddField("City");
		this.AddField("Gender");
		this.AddField("BodyBuild");
		this.AddField("HairColor");
		this.AddField("EyeColor");
		this.AddField("Smokes");
		this.AddField("Alcohol");
		this.AddField("Religion");
		this.AddField("DickSize");
		this.AddField("DickThickness");
		this.AddField("BreastSize");
		this.AddField("BirthYear");
		this.AddField("Height");
		this.AddField("Search");
		this.AddField("__document_id");
	}
}

2012-04-07 02:52:16.2155|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index Raven%2fDocumentsByEntityName:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Raven_2fDocumentsByEntityName : AbstractViewGenerator
{
	public Index_Raven_2fDocumentsByEntityName()
	{
		this.ViewText = @"from doc in docs 
let Tag = doc[""@metadata""][""Raven-Entity-Name""]
select new { Tag, LastModified = (DateTime)doc[""@metadata""][""Last-Modified""] };
";
		this.AddMapDefinition(docs => from doc in docs
			let Tag = doc["@metadata"]["Raven-Entity-Name"]
			select new { Tag, LastModified = (DateTime)doc["@metadata"]["Last-Modified"], __document_id = doc.__document_id });
		this.AddField("LastModified");
		this.AddField("__document_id");
		this.AddField("Tag");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Raven_2fDocumentsByEntityName : AbstractViewGenerator
{
	public Index_Raven_2fDocumentsByEntityName()
	{
		this.ViewText = @"from doc in docs 
let Tag = doc[""@metadata""][""Raven-Entity-Name""]
select new { Tag, LastModified = (DateTime)doc[""@metadata""][""Last-Modified""] };
";
		this.AddMapDefinition(docs => from doc in docs
			let Tag = doc["@metadata"]["Raven-Entity-Name"]
			select new { Tag, LastModified = (DateTime)doc["@metadata"]["Last-Modified"], __document_id = doc.__document_id });
		this.AddField("LastModified");
		this.AddField("__document_id");
		this.AddField("Tag");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("__document_id");
	}
}

2012-04-07 02:52:16.4125|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index Temp%2fProfiles%2fByBirthYear_RangeAndGenderAndHairColorSortByBirthYear:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderAndHairColorSortByBirthYear : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderAndHairColorSortByBirthYear()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { BirthYear = doc.BirthYear, HairColor = doc.HairColor, Gender = doc.Gender }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { BirthYear = doc.BirthYear, HairColor = doc.HairColor, Gender = doc.Gender, __document_id = doc.__document_id });
		this.AddField("BirthYear");
		this.AddField("HairColor");
		this.AddField("Gender");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("BirthYear");
		this.AddQueryParameterForMap("HairColor");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("BirthYear");
		this.AddQueryParameterForReduce("HairColor");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderAndHairColorSortByBirthYear : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderAndHairColorSortByBirthYear()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { BirthYear = doc.BirthYear, HairColor = doc.HairColor, Gender = doc.Gender }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { BirthYear = doc.BirthYear, HairColor = doc.HairColor, Gender = doc.Gender, __document_id = doc.__document_id });
		this.AddField("BirthYear");
		this.AddField("HairColor");
		this.AddField("Gender");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("BirthYear");
		this.AddQueryParameterForMap("HairColor");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("BirthYear");
		this.AddQueryParameterForReduce("HairColor");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("__document_id");
	}
}

2012-04-07 02:52:16.8495|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index Temp%2fProfiles%2fByBirthYear_RangeAndGenderSortByBirthYear:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderSortByBirthYear : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderSortByBirthYear()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { BirthYear = doc.BirthYear, Gender = doc.Gender }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { BirthYear = doc.BirthYear, Gender = doc.Gender, __document_id = doc.__document_id });
		this.AddField("BirthYear");
		this.AddField("Gender");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("BirthYear");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("BirthYear");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderSortByBirthYear : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByBirthYear_RangeAndGenderSortByBirthYear()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { BirthYear = doc.BirthYear, Gender = doc.Gender }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { BirthYear = doc.BirthYear, Gender = doc.Gender, __document_id = doc.__document_id });
		this.AddField("BirthYear");
		this.AddField("Gender");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("BirthYear");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("BirthYear");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("__document_id");
	}
}

2012-04-07 02:52:17.1085|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index Temp%2fProfiles%2fByFromAndGenderAndHeight_RangeSortByHeight:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByFromAndGenderAndHeight_RangeSortByHeight : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByFromAndGenderAndHeight_RangeSortByHeight()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { Height = doc.Height, Gender = doc.Gender, From = doc.From }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { Height = doc.Height, Gender = doc.Gender, From = doc.From, __document_id = doc.__document_id });
		this.AddField("Height");
		this.AddField("Gender");
		this.AddField("From");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("Height");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("From");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("Height");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("From");
		this.AddQueryParameterForReduce("__document_id");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fProfiles_2fByFromAndGenderAndHeight_RangeSortByHeight : AbstractViewGenerator
{
	public Index_Temp_2fProfiles_2fByFromAndGenderAndHeight_RangeSortByHeight()
	{
		this.ViewText = @"from doc in docs.Profiles
select new { Height = doc.Height, Gender = doc.Gender, From = doc.From }
";
		this.ForEntityNames.Add("Profiles");
		this.AddMapDefinition(docs => from doc in docs
			where doc["@metadata"]["Raven-Entity-Name"] == "Profiles"
			select new { Height = doc.Height, Gender = doc.Gender, From = doc.From, __document_id = doc.__document_id });
		this.AddField("Height");
		this.AddField("Gender");
		this.AddField("From");
		this.AddField("__document_id");
		this.AddQueryParameterForMap("Height");
		this.AddQueryParameterForMap("Gender");
		this.AddQueryParameterForMap("From");
		this.AddQueryParameterForMap("__document_id");
		this.AddQueryParameterForReduce("Height");
		this.AddQueryParameterForReduce("Gender");
		this.AddQueryParameterForReduce("From");
		this.AddQueryParameterForReduce("__document_id");
	}
}

2012-04-07 02:52:17.3665|INFO|Raven.Database.Storage.IndexDefinitionStorage|New index UniqueVisitorsIndex:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_UniqueVisitorsIndex : AbstractViewGenerator
{
	public Index_UniqueVisitorsIndex()
	{
		this.ViewText = @"docs.Visits
	.Select(doc => new {ProfileId = ((long)doc.VisitorProfileId), Count = 1})
results
	.GroupBy(result => result.ProfileId)
	.Select(g => new {ProfileId = g.Key, Count = g.Sum(x => ((System.Int32)(x.Count)))})

";
		this.ForEntityNames.Add("Visits");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Visits").Select((Func<dynamic, dynamic>)(doc => new { ProfileId = ((long)doc.VisitorProfileId), Count = 1, __document_id = doc.__document_id })));
		this.ReduceDefinition = results => results.GroupBy((Func<dynamic, dynamic>)(result => result.ProfileId)).Select((Func<IGrouping<dynamic,dynamic>, dynamic>)(g => new { ProfileId = g.Key, Count = g.Sum((Func<dynamic, System.Int32>)(x => ((System.Int32)(x.Count)))) }));
		this.GroupByExtraction = result => result.ProfileId;
		this.AddField("ProfileId");
		this.AddField("Count");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_UniqueVisitorsIndex : AbstractViewGenerator
{
	public Index_UniqueVisitorsIndex()
	{
		this.ViewText = @"docs.Visits
	.Select(doc => new {ProfileId = ((long)doc.VisitorProfileId), Count = 1})
results
	.GroupBy(result => result.ProfileId)
	.Select(g => new {ProfileId = g.Key, Count = g.Sum(x => ((System.Int32)(x.Count)))})

";
		this.ForEntityNames.Add("Visits");
		this.AddMapDefinition(docs => docs.Where(__document => __document["@metadata"]["Raven-Entity-Name"] == "Visits").Select((Func<dynamic, dynamic>)(doc => new { ProfileId = ((long)doc.VisitorProfileId), Count = 1, __document_id = doc.__document_id })));
		this.ReduceDefinition = results => results.GroupBy((Func<dynamic, dynamic>)(result => result.ProfileId)).Select((Func<IGrouping<dynamic,dynamic>, dynamic>)(g => new { ProfileId = g.Key, Count = g.Sum((Func<dynamic, System.Int32>)(x => ((System.Int32)(x.Count)))) }));
		this.GroupByExtraction = result => result.ProfileId;
		this.AddField("ProfileId");
		this.AddField("Count");
	}
}

2012-04-07 02:52:17.3875|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index ProfileCountryFacetIndex
2012-04-07 02:52:17.4125|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for ProfileCountryFacetIndex
2012-04-07 02:52:17.4495|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index ProfileFacetsIndex
2012-04-07 02:52:17.4495|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for ProfileFacetsIndex
2012-04-07 02:52:17.4495|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index ProfileLanguageFacetIndex
2012-04-07 02:52:17.4495|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for ProfileLanguageFacetIndex
2012-04-07 02:52:17.4555|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index ProfileSearchFacetIndex
2012-04-07 02:52:17.4555|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for ProfileSearchFacetIndex
2012-04-07 02:52:17.4555|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index Raven/DocumentsByEntityName
2012-04-07 02:52:17.4555|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for Raven/DocumentsByEntityName
2012-04-07 02:52:17.4555|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index Temp/Profiles/ByBirthYear_RangeAndGenderAndHairColorSortByBirthYear
2012-04-07 02:52:17.5726|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for Temp/Profiles/ByBirthYear_RangeAndGenderAndHairColorSortByBirthYear
2012-04-07 02:52:17.5726|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index Temp/Profiles/ByBirthYear_RangeAndGenderSortByBirthYear
2012-04-07 02:52:17.6186|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for Temp/Profiles/ByBirthYear_RangeAndGenderSortByBirthYear
2012-04-07 02:52:17.6186|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index Temp/Profiles/ByFromAndGenderAndHeight_RangeSortByHeight
2012-04-07 02:52:17.6646|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for Temp/Profiles/ByFromAndGenderAndHeight_RangeSortByHeight
2012-04-07 02:52:17.6646|DEBUG|Raven.Database.Indexing.IndexStorage.Startup|Loading saved index UniqueVisitorsIndex
2012-04-07 02:52:17.6646|DEBUG|Raven.Database.Indexing.Index.Indexing|Creating index for UniqueVisitorsIndex
2012-04-07 02:52:17.7406|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'Raven/Backup/Status' was not found
2012-04-07 02:52:17.8026|INFO|Raven.Database.Indexing.IndexStorage|Deleting index Temp/Profiles/ByBirthYear_RangeAndGenderAndHairColorSortByBirthYear
2012-04-07 02:52:17.8146|DEBUG|Raven.Database.Indexing.WorkContext|Incremented work counter to 1 because: DELETE INDEX Temp/Profiles/ByBirthYear_RangeAndGenderAndHairColorSortByBirthYear
2012-04-07 02:52:17.8146|INFO|Raven.Database.Indexing.IndexStorage|Deleting index Temp/Profiles/ByBirthYear_RangeAndGenderSortByBirthYear
2012-04-07 02:52:17.8146|DEBUG|Raven.Database.Indexing.WorkContext|Incremented work counter to 2 because: DELETE INDEX Temp/Profiles/ByBirthYear_RangeAndGenderSortByBirthYear
2012-04-07 02:52:17.8146|INFO|Raven.Database.Indexing.IndexStorage|Deleting index Temp/Profiles/ByFromAndGenderAndHeight_RangeSortByHeight
2012-04-07 02:52:17.8146|DEBUG|Raven.Database.Indexing.WorkContext|Incremented work counter to 3 because: DELETE INDEX Temp/Profiles/ByFromAndGenderAndHeight_RangeSortByHeight
2012-04-07 02:52:17.8476|DEBUG|Raven.Database.Indexing.WorkContext|No work was found, workerWorkCounter: 3, for: ReducingExecuter, will wait for additional work
2012-04-07 02:52:17.8926|DEBUG|Raven.Database.Indexing.WorkContext|No work was found, workerWorkCounter: 3, for: IndexingExecuter, will wait for additional work
2012-04-07 02:52:18.0486|INFO|MS.Katusha.Web.Helpers.DependencyHelper|Dependencies resolved
2012-04-07 02:52:18.7556|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:18.8066|DEBUG|Raven.Database.Server.HttpServer|Request #   1: GET     -   103 ms - <default>  - 200 - /docs/facets/ProfileFacets?noCache=-878396293
2012-04-07 02:52:20.6677|DEBUG|Raven.Client.Document.InMemoryDocumentSessionOperations|Saving 4 changes to P:\GIT\MS.Katusha\MS.Katusha.Web\App_Data\MS.Katusha.RavenDB
	PUT facets/ProfileFacets
	PUT facets/ProfileCountryFacet
	PUT facets/ProfileSearchFacet
	PUT facets/ProfileLanguageFacet

2012-04-07 02:52:20.6927|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Inserted a new document with key 'facets/ProfileFacets', update: True, 
2012-04-07 02:52:20.6927|DEBUG|Raven.Database.DocumentDatabase|Put document facets/ProfileFacets with etag 00000000-0000-1500-0000-000000000001
2012-04-07 02:52:20.6927|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Inserted a new document with key 'facets/ProfileCountryFacet', update: True, 
2012-04-07 02:52:20.6927|DEBUG|Raven.Database.DocumentDatabase|Put document facets/ProfileCountryFacet with etag 00000000-0000-1500-0000-000000000002
2012-04-07 02:52:20.6927|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Inserted a new document with key 'facets/ProfileSearchFacet', update: True, 
2012-04-07 02:52:20.6927|DEBUG|Raven.Database.DocumentDatabase|Put document facets/ProfileSearchFacet with etag 00000000-0000-1500-0000-000000000003
2012-04-07 02:52:20.6927|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Inserted a new document with key 'facets/ProfileLanguageFacet', update: True, 
2012-04-07 02:52:20.6927|DEBUG|Raven.Database.DocumentDatabase|Put document facets/ProfileLanguageFacet with etag 00000000-0000-1500-0000-000000000004
2012-04-07 02:52:20.7007|DEBUG|Raven.Database.Indexing.WorkContext|Incremented work counter to 4 because: PUT facets/ProfileFacets, PUT facets/ProfileCountryFacet, PUT facets/ProfileSearchFacet, PUT facets/ProfileLanguageFacet
2012-04-07 02:52:20.7007|DEBUG|Raven.Database.DocumentDatabase|Successfully executed 4 commands in 00:00:00.0407850
2012-04-07 02:52:20.7007|DEBUG|Raven.Database.Indexing.WorkContext|No work was found, workerWorkCounter: 4, for: ReducingExecuter, will wait for additional work
2012-04-07 02:52:20.7607|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|Found a total of 4 documents that requires indexing since etag: 00000000-0000-1400-0000-000000000004
2012-04-07 02:52:20.7887|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|After read triggers executed, 4 documents remained
2012-04-07 02:52:20.8077|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|All documents have been filtered for ProfileCountryFacetIndex, no indexing will be performed, updating to 00000000-0000-1500-0000-000000000004, 4/6/2012 11:52:20 PM
2012-04-07 02:52:20.8077|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|All documents have been filtered for ProfileFacetsIndex, no indexing will be performed, updating to 00000000-0000-1500-0000-000000000004, 4/6/2012 11:52:20 PM
2012-04-07 02:52:20.8077|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|All documents have been filtered for ProfileSearchFacetIndex, no indexing will be performed, updating to 00000000-0000-1500-0000-000000000004, 4/6/2012 11:52:20 PM
2012-04-07 02:52:20.8077|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|All documents have been filtered for ProfileLanguageFacetIndex, no indexing will be performed, updating to 00000000-0000-1500-0000-000000000004, 4/6/2012 11:52:20 PM
2012-04-07 02:52:20.8127|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|All documents have been filtered for UniqueVisitorsIndex, no indexing will be performed, updating to 00000000-0000-1500-0000-000000000004, 4/6/2012 11:52:20 PM
2012-04-07 02:52:20.8127|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|Going to index 4 documents in IndexName: Raven/DocumentsByEntityName, LastIndexedEtag: 00000000-0000-1400-0000-000000000004
2012-04-07 02:52:20.8127|DEBUG|Raven.Database.Indexing.AbstractIndexingExecuter|Indexing 4 documents for index: Raven/DocumentsByEntityName. (facets/ProfileFacets,facets/ProfileCountryFacet,facets/ProfileSearchFacet,facets/ProfileLanguageFacet)
2012-04-07 02:52:21.4388|INFO|RepositoryDB|Single<MS.Katusha.Domain.Entities.User>(u => (u.UserName == value(MS.Katusha.Services.UserService+<>c__DisplayClass3).userName))
2012-04-07 02:52:21.5928|DEBUG|Raven.Database.Indexing.Index.Indexing|Indexing on facets/ProfileFacets result in index Raven/DocumentsByEntityName gave document: 	__document_id IS: facets/profilefacets
	Tag I-: FacetSetups
	LastModified I-: 20120406235220691

2012-04-07 02:52:21.6168|INFO|RepositoryDB|Single<MS.Katusha.Domain.Entities.Profile>(p => (p.Guid == value(MS.Katusha.Repositories.DB.Base.BaseGuidRepositoryDB`1+<>c__DisplayClass0[MS.Katusha.Domain.Entities.Profile]).guid))
2012-04-07 02:52:21.6448|DEBUG|Raven.Database.Indexing.Index.Indexing|Indexing on facets/ProfileCountryFacet result in index Raven/DocumentsByEntityName gave document: 	__document_id IS: facets/profilecountryfacet
	Tag I-: FacetSetups
	LastModified I-: 20120406235220695

2012-04-07 02:52:21.6448|DEBUG|Raven.Database.Indexing.Index.Indexing|Indexing on facets/ProfileSearchFacet result in index Raven/DocumentsByEntityName gave document: 	__document_id IS: facets/profilesearchfacet
	Tag I-: FacetSetups
	LastModified I-: 20120406235220696

2012-04-07 02:52:21.6448|DEBUG|Raven.Database.Indexing.Index.Indexing|Indexing on facets/ProfileLanguageFacet result in index Raven/DocumentsByEntityName gave document: 	__document_id IS: facets/profilelanguagefacet
	Tag I-: FacetSetups
	LastModified I-: 20120406235220697

2012-04-07 02:52:21.8018|DEBUG|Raven.Database.Indexing.Index.Indexing|Indexed 12 documents for Raven/DocumentsByEntityName
2012-04-07 02:52:21.8158|DEBUG|Raven.Database.Indexing.WorkContext|Incremented work counter to 5 because: WORK BY IndexingExecuter
2012-04-07 02:52:21.8158|DEBUG|Raven.Database.Indexing.WorkContext|No work was found, workerWorkCounter: 5, for: IndexingExecuter, will wait for additional work
2012-04-07 02:52:21.8348|DEBUG|Raven.Database.Indexing.WorkContext|No work was found, workerWorkCounter: 5, for: ReducingExecuter, will wait for additional work
2012-04-07 02:52:21.8488|DEBUG|Raven.Database.Server.HttpServer|Request #   2: GET     -    96 ms - <default>  - 200 - /stats?noCache=168156886
2012-04-07 02:52:24.8089|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:29.8772|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:34.9455|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:40.0816|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:45.1689|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:50.3620|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
2012-04-07 02:52:50.3620|DEBUG|Raven.Database.Server.HttpServer|Request #   3: GET     -   110 ms - <default>  - 200 - /docs/facets/ProfileFacets?noCache=16613280
2012-04-07 02:52:50.3720|DEBUG|Raven.Database.Server.HttpServer|Request #   4: GET     -   119 ms - <default>  - 200 - /stats?noCache=-1708549434
2012-04-07 02:52:56.3202|DEBUG|Raven.Storage.Esent.StorageActions.DocumentStorageActions|Document with key 'facets/ProfileFacets' was found
