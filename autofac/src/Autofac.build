<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="Release" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="Resource\Build\MSBuild.Community.Tasks.targets" />
  <Import Project="Resource\Build\NCoverExplorer.MSBuildTasks.targets"/>
  <!-- Main build entry file (extends development builds)-->
  <PropertyGroup>
    <!--
       Primary configuration properties (override them via command line
       if needed
    -->
    <BuildPath Condition="$(BuildPath)==''">$(MSBuildProjectDirectory)\Build</BuildPath>
    <Configuration Condition="$(Configuration)==''">Release</Configuration>
    <ArtifactDirectory Condition="$(ArtifactDirectory)==''">$(BuildPath)\Artifact</ArtifactDirectory>
    <BuildFramework></BuildFramework>
    <MonoPath Condition="$(MonoPath)==''">"C:\Program Files (x86)\Mono-2.6.1\bin\mono.exe"</MonoPath>

    <PackageDirectory Condition="$(PackageDirectory)==''">$(BuildPath)\_Package</PackageDirectory>
    <Version Condition="$(Version)==''">0.0.0.0</Version>
    <!--
      Derived configuration properties
         -->
    <TestPath>$(BuildPath)\Test</TestPath>
    <LibraryPath>$(BuildPath)\Library</LibraryPath>
    <LicensePath>$(BuildPath)\License</LicensePath>
    
    <LibrarySource>Source\Autofac\bin\$(Configuration)</LibrarySource>
    <WcfSource>Source\Autofac.Integration.Wcf\bin\$(Configuration)</WcfSource>
    <WebSource>Source\Autofac.Integration.Web\bin\$(Configuration)</WebSource>
    <MvcSource>Source\Autofac.Integration.Mvc\bin\$(Configuration)</MvcSource>
	<WebApiSource>Source\Autofac.Integration.WebApi\bin\$(Configuration)</WebApiSource>
    <MefSource>Source\Autofac.Integration.Mef\bin\$(Configuration)</MefSource>
    <ConfigSource>Source\Autofac.Configuration\bin\$(Configuration)</ConfigSource>
    <SourceExclusions>**\.svn\**\*.*;**\_svn\**\*.*;**\*.user;**\*.suo;**\*.db;**\bin\**\*.*;**\obj\**\*.*;</SourceExclusions>
    <ProjectName>$(MSBuildProjectName)</ProjectName>

    <NUnitConsole>"$(MSBuildProjectDirectory)\Resource\Tool\NUnit\nunit-console.exe"</NUnitConsole>
  </PropertyGroup>

  <!--Default-->
  <PropertyGroup Condition="$(BuildFramework)=='' or $(BuildFramework)=='NET40'">
    <PackageName>$(ProjectName)-$(Version)-NET40</PackageName>
    <BuildConstants>NET40</BuildConstants>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <AllowPartiallyTrustedCallers>true</AllowPartiallyTrustedCallers>
  </PropertyGroup>
  <PropertyGroup Condition="$(BuildFramework)=='NET35'">
    <PackageName>$(ProjectName)-$(Version)-NET35</PackageName>
    <BuildConstants>NET35</BuildConstants>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <AllowPartiallyTrustedCallers>false</AllowPartiallyTrustedCallers>
  </PropertyGroup>
  <PropertyGroup Condition="$(BuildFramework)=='WP7'">
    <BuildTargets>Windows Phone 7</BuildTargets>
    <BuildConstants>SILVERLIGHT;SL3;WINDOWS_PHONE</BuildConstants>
    <PackageName>$(ProjectName)-$(Version)-WP7</PackageName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile4</TargetFrameworkProfile>
    <MSBuildTargets>Windows Phone 7</MSBuildTargets>
    <AllowPartiallyTrustedCallers>false</AllowPartiallyTrustedCallers>
  </PropertyGroup>
  <PropertyGroup Condition="$(BuildFramework)=='SL4'">
    <BuildTargets>Silverlight 4.0</BuildTargets>
    <BuildConstants>SILVERLIGHT;SL4</BuildConstants>
    <PackageName>$(ProjectName)-$(Version)-SL4</PackageName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkIdentifier>Silverlight</TargetFrameworkIdentifier>
    <AllowPartiallyTrustedCallers>false</AllowPartiallyTrustedCallers>
  </PropertyGroup>

  <!-- 
   Solution redirects. Every VS project normally knows how to support these targets
    -->
  <Target Name="Build">
    <MSBuild Projects="$(ProjectName).sln" Targets="Build" Properties="Configuration=$(Configuration)$(BuildFramework);BuildConstants=$(BuildConstants);MSBuildTargets=$(BuildTargets);TargetFrameworkVersion=$(TargetFrameworkVersion);TargetFrameworkProfile=$(TargetFrameworkProfile)"/>
  </Target>

  <Target Name="Clean">
    <MSBuild Projects="$(ProjectName).sln" Targets="Clean" Properties="Configuration=$(Configuration)$(BuildFramework);BuildConstants=$(BuildConstants);MSBuildTargets=$(BuildTargets);TargetFrameworkVersion=$(TargetFrameworkVersion)" />

    <CreateItem Include="**/Debug/**/*.*;**/Release/**/*.*">
      <Output ItemName="_binaryFiles" TaskParameter="Include"/>
    </CreateItem>
    <Delete Files="@(_binaryFiles)" TreatErrorsAsWarnings="true"/>
    <RemoveDir Directories="$(BuildPath)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build;" />
  
  <Target Name="Integrate" DependsOnTargets="Clean;Test;Report" />
  <Target Name="Release" DependsOnTargets="Clean;_Version;Build;Test;Report;Distrib" />

  <Target Name="Report" DependsOnTargets="Clean;Build;Copy">
    <MakeDir Directories="$(ArtifactDirectory)" />
    <!--<FxCop ToolPath="Resource/Tool/FxCop" ProjectFile="$(MSBuildProjectName).FxCop" AnalysisReportFileName="$(ArtifactDirectory)/$(MSBuildProjectName).fxcop-result.xml"/>-->
  </Target>

  <!--
   Copies built items to the distrib directory
   -->
  <Target Name="Copy" DependsOnTargets="Build">
    <MakeDir Directories="$(BuildPath);"/>
    
    <!--Libraries-->
    <CreateItem
      Include="$(LibrarySource)\*.dll;$(LibrarySource)\*.xml;$(WebSource)\*.dll;$(MvcSource)\*.dll;$(WebApiSource)\*.dll;$(MefSource)\*.dll;$(WcfSource)\*.dll;$(ConfigSource)\*.dll">
      <Output ItemName="unmergedFiles" TaskParameter="Include"/>
    </CreateItem>
    <Copy SourceFiles="@(unmergedFiles)" DestinationFolder="$(LibraryPath)" />

    <!--All Tests-->
    <CreateItem Include="Test\**\bin\$(Configuration)\*.*">
      <Output ItemName="TestFiles" TaskParameter="Include"/>
    </CreateItem>
    <Copy SourceFiles="@(TestFiles)" DestinationFolder="$(TestPath)" />
    <CreateItem Include="Test\**\bin\$(Configuration)\Configuration\*.*">
      <Output ItemName="ConfigFiles" TaskParameter="Include"/>
    </CreateItem>
    <Copy SourceFiles="@(ConfigFiles)" DestinationFolder="$(TestPath)\Configuration" />
    
    <!--Licenses-->
    <CreateItem Include="*License.txt">
      <Output ItemName="licenseFiles" TaskParameter="Include"/>
    </CreateItem>
    <Copy SourceFiles="@(licenseFiles)" DestinationFolder="$(LicensePath)" />
  </Target>

  <Target Name="Config">
    <Message Text="This sub-solution does not need configuration" />
  </Target>

  <Target Name="MonoTest" DependsOnTargets="Build;Copy">
  
    <CreateItem Include="$(TestPath)\Autofac.Test*dll">
      <Output ItemName="_monoTestFiles" TaskParameter="Include"/>
    </CreateItem>
    
    <Exec Command="$(MonoPath) $(NUnitConsole) @(_monoTestFiles->'&quot;%(FullPath)&quot;', ' ') /nologo /noshadow"></Exec>
  
  </Target>
  
  <Target Name="Test" DependsOnTargets="Build;Copy" Condition="$(TargetFrameworkIdentifier) != 'Silverlight' And $(BuildFramework) != WP7">

    <CreateItem Include="$(TestPath)\Autofac.Test*dll" Exclude="$(TestPath)\Autofac.Tests.Scenarios.ScannedAssembly.dll">
      <Output ItemName="_testFiles" TaskParameter="Include"/>
    </CreateItem>

    <Exec Command="$(NUnitConsole) @(_testFiles->'&quot;%(FullPath)&quot;', ' ') /nologo /noshadow"></Exec>

  </Target>

  <Target Name="_Version">
    <CreateItem Include="**\GlobalAssemblyInfo.cs">
      <Output ItemName="_VersionPaths" TaskParameter="Include"/>
    </CreateItem>
    <CreateItem Include="@(_VersionPaths->'%(SubFolder)%(RecursiveDir)VersionAssemblyInfo.cs')">
      <Output ItemName="_VersionFiles" TaskParameter="Include"/>
    </CreateItem>
    <Time Format="yyyy-MM-dd HH:mm">
      <Output TaskParameter="FormattedTime" PropertyName="BuildTime" />
    </Time>
    <AssemblyInfo OutputFile="%(_VersionFiles.FullPath)" CodeLanguage="CS"
      AssemblyVersion="$(Version)"
      AssemblyFileVersion="$(Version)"
      AssemblyConfiguration="$(Configuration) built on $(BuildTime)" />
    <WriteLinesToFile
      File="%(_VersionFiles.FullPath)"
      Overwrite="false"
      Lines="[assembly: System.Security.SecurityTransparent];[assembly: System.Security.SecurityRules(System.Security.SecurityRuleSet.Level2)]"
      Condition="$(AllowPartiallyTrustedCallers)==true" />
  </Target>


  <Target Name="WipeResources">
    <!--Wipe old version files-->
    <CreateItem Include="**\VersionAssemblyInfo.cs">
      <Output ItemName="_VersionPaths" TaskParameter="Include"/>
    </CreateItem>
    <Delete Files="@(_VersionPaths)" />
  </Target>


  <Target Name="GenerateHelp" DependsOnTargets="Build;Copy" Condition="$(BuildFramework)=='NET35'">
    <Exec Command="Resource\Tool\SHFB\SandcastleBuilderConsole.exe $(ProjectName).shfb" />
  </Target>

  <Target Name="Distrib" DependsOnTargets="Clean;Build;Copy;Config">
    <MakeDir Directories="$(PackageDirectory)" />

    <!-- Archive-->
    <CreateItem Include="$(LibraryPath)\Autofac*.*;$(LicensePath)\*.*">
      <Output ItemName="_libFiles" TaskParameter="Include" />
    </CreateItem>
    <Zip Files="@(_libFiles)" ZipFileName="$(PackageDirectory)\$(PackageName).zip" Flatten="true" WorkingDirectory="$(BuildPath)" />
  </Target>
</Project>
